---
version: "3"

services:
  grafana:
    image: grafana/grafana-oss:12.1.1
    volumes:
      - grafana-data:/var/lib/grafana
    restart: on-failure
    environment:
      GF_SERVER_ROOT_URL: ${GF_SERVER_ROOT_URL:?err}
      GF_AUTH_GOOGLE_ENABLED: "true"
      GF_AUTH_GOOGLE_ALLOW_SIGN_UP: "true"
      GF_AUTH_GOOGLE_AUTO_LOGIN: "false"
      GF_AUTH_GOOGLE_CLIENT_ID: ${GF_AUTH_GOOGLE_CLIENT_ID:?err}
      GF_AUTH_GOOGLE_CLIENT_SECRET: ${GF_AUTH_GOOGLE_CLIENT_SECRET:?err}
      GF_AUTH_GOOGLE_SCOPES: "openid email profile"
      GF_AUTH_GOOGLE_AUTH_URL: "https://accounts.google.com/o/oauth2/auth"
      GF_AUTH_GOOGLE_TOKEN_URL: "https://oauth2.googleapis.com/token"
      GF_AUTH_GOOGLE_API_URL: "https://openidconnect.googleapis.com/v1/userinfo"
      GF_AUTH_GOOGLE_ALLOWED_DOMAINS: ${GF_AUTH_GOOGLE_ALLOWED_DOMAINS:?err}
      GF_AUTH_GOOGLE_HOSTED_DOMAIN: ${GF_AUTH_GOOGLE_HOSTED_DOMAIN:?err}
      GF_AUTH_GOOGLE_USE_PKCE: "true"
    network_mode: service:tailscale-grafana
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  tailscale-grafana:
    image: ghcr.io/elliotmatson/tailscale-sidecar-proxy:1.88.2
    restart: on-failure
    environment:
      TAILSCALE_AUTH_KEY: ${TS_AUTH_KEY:?err}
      TAILSCALE_HOSTNAME: grafana
      TAILSCALE_SERVE_PORT: 3000
      TAILSCALE_SSH: true
      TAILSCALE_STATE_DIR: /var/lib/tailscale
      TAILSCALE_SERVE_SOURCE_MODE: http
    volumes:
      - tailscale-grafana-state:/var/lib/tailscale

  prometheus:
    image: prom/prometheus:v3.6.0
    volumes:
      - prometheus-config:/etc/prometheus
      - prometheus-data:/prometheus
    restart: on-failure
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    network_mode: service:tailscale-prometheus
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --quiet --spider http://localhost:9090/-/healthy || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  tailscale-prometheus:
    image: ghcr.io/elliotmatson/tailscale-sidecar-proxy:1.88.2
    restart: on-failure
    environment:
      TAILSCALE_AUTH_KEY: ${TS_AUTH_KEY:?err}
      TAILSCALE_HOSTNAME: prometheus
      TAILSCALE_SERVE_PORT: 9090
      TAILSCALE_SSH: true
      TAILSCALE_STATE_DIR: /var/lib/tailscale
      TAILSCALE_SERVE_SOURCE_MODE: http
    volumes:
      - tailscale-prometheus-state:/var/lib/tailscale
  
  alloy:
    image: grafana/alloy:v1.11.0
    volumes:
      - alloy-config:/etc/alloy/
      - /tmp/app-logs/
    command: run --server.http.listen-addr=0.0.0.0:12345 --stability.level=experimental  --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    depends_on:
      - loki
    restart: on-failure
    network_mode: service:tailscale-alloy

  tailscale-alloy:
    image: ghcr.io/elliotmatson/tailscale-sidecar-proxy:1.88.2
    restart: on-failure
    ports:
      - 12345:12345
      - "514:514/udp"     # Standard syslog UDP port
      - "514:514/tcp"     # Standard syslog TCP port (if needed)
    environment:
      TAILSCALE_AUTH_KEY: ${TS_AUTH_KEY:?err}
      TAILSCALE_HOSTNAME: alloy
      TAILSCALE_SERVE_PORT: 12345
      TAILSCALE_SSH: true
      TAILSCALE_STATE_DIR: /var/lib/tailscale
      TAILSCALE_SERVE_SOURCE_MODE: http
    volumes:
      - tailscale-alloy-state:/var/lib/tailscale

  loki:
    image: grafana/loki:3.5.2
    volumes:
      - loki-config:/etc/loki/
    command: -config.file=/etc/loki/local-config.yaml
    restart: on-failure
    network_mode: service:tailscale-loki
  
  tailscale-loki:
    image: ghcr.io/elliotmatson/tailscale-sidecar-proxy:1.88.2
    restart: on-failure
    environment:
      TAILSCALE_AUTH_KEY: ${TS_AUTH_KEY:?err}
      TAILSCALE_HOSTNAME: loki
      TAILSCALE_SERVE_PORT: 3100
      TAILSCALE_SSH: true
      TAILSCALE_STATE_DIR: /var/lib/tailscale
      TAILSCALE_SERVE_SOURCE_MODE: http
    volumes:
      - tailscale-loki-state:/var/lib/tailscale

  cadvisor:
    # latest tag is not updated, check latest release https://github.com/google/cadvisor/releases
    image: gcr.io/cadvisor/cadvisor:v0.52.1
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /dev/disk/:/dev/disk:ro
      - /var/lib/docker/:/var/lib/docker:ro
    devices:
      - /dev/kmsg
    restart: on-failure
    privileged: true

  pve:
    image: prompve/prometheus-pve-exporter:3.5.5
    restart: on-failure
    environment:
      PVE_USER: ${PVE_USER:?err}
      PVE_TOKEN_NAME: ${PVE_TOKEN_NAME:?err}
      PVE_TOKEN_VALUE: ${PVE_TOKEN_VALUE:?err}
      PVE_VERIFY_SSL: false
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --quiet --spider http://localhost:9221/metrics || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  prometheus-data:
  prometheus-config:
  grafana-data:
  tailscale-grafana-state:
  tailscale-prometheus-state:
  loki-config:
  tailscale-loki-state:
  alloy-config:
  tailscale-alloy-state:
